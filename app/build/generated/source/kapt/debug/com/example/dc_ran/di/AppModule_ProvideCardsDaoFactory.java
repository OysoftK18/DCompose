// Generated by Dagger (https://dagger.dev).
package com.example.dc_ran.di;

import com.example.dc_ran.data.CardsDao;
import com.example.dc_ran.data.CardsDataBase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideCardsDaoFactory implements Factory<CardsDao> {
  private final Provider<CardsDataBase> cadsDatabaseProvider;

  public AppModule_ProvideCardsDaoFactory(Provider<CardsDataBase> cadsDatabaseProvider) {
    this.cadsDatabaseProvider = cadsDatabaseProvider;
  }

  @Override
  public CardsDao get() {
    return provideCardsDao(cadsDatabaseProvider.get());
  }

  public static AppModule_ProvideCardsDaoFactory create(
      Provider<CardsDataBase> cadsDatabaseProvider) {
    return new AppModule_ProvideCardsDaoFactory(cadsDatabaseProvider);
  }

  public static CardsDao provideCardsDao(CardsDataBase cadsDatabase) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideCardsDao(cadsDatabase));
  }
}
